version: "3.8"

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80" # 하나의 포트로 통합
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - spring
      - flask
    networks:
      - default

  flask:
    build: ./FlaskAPI
    ports:
      - "5000:5000"
    volumes:
      - ./FlaskAPI:/app
    networks:
      - default

  mysql:
    container_name: mysqldeliver
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: nutri_delivery
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user_katherinejh
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - default

  elasticsearch:
    image: elasticsearch:8.15.5
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  spring:
    build: ./Server/food-ordering-system
    ports:
      - "5454:5454"
    volumes:
      - ./Server/food-ordering-system:/app
    depends_on:
      elasticsearch:
        condition: service_healthy
      mysql:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/nutri_delivery
      - SPRING_DATASOURCE_USERNAME=user_katherinejh
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_ELASTICSEARCH_URIS=http://elasticsearch:9200
    entrypoint:
      [
        "sh",
        "-c",
        "sleep 20 && java -jar /app/build/libs/food-ordering-system-0.0.1-SNAPSHOT.war",
      ]
    networks:
      - default

  frontend:
    build: ./client-side/ordering-ui
    ports:
      - "5173:5173"
    command: npm run dev -- --host
    depends_on:
      - spring
    networks:
      - default

networks:
  default:
    name: online_food_ordering_default

volumes:
  mysql_data:
